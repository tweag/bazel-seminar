load("@rules_haskell//haskell/experimental:defs.bzl", "haskell_module")
load("@rules_haskell//haskell:defs.bzl", "haskell_binary", "haskell_library", "haskell_test")
load(
    "@bazel_gazelle//:def.bzl",
    "DEFAULT_LANGUAGES",
    "gazelle",
    "gazelle_binary",
)

gazelle(
    name = "gazelle",
    gazelle = ":gazelle_binary",
)

gazelle_binary(
    name = "gazelle_binary",
    languages = DEFAULT_LANGUAGES + ["@io_tweag_gazelle_cabal//gazelle_cabal"],
)

gazelle(
    name = "gazelle-update-repos",
    command = "update-repos",
    extra_args = [
        "-lang",
        "gazelle_cabal",
        "stackage",
    ],
    gazelle = ":gazelle_binary",
)

gazelle(
    name = "gazelle_mods",
    gazelle = ":gazelle_binary_mods",
)

gazelle_binary(
    name = "gazelle_binary_mods",
    languages = DEFAULT_LANGUAGES + ["@io_tweag_gazelle_haskell_modules//gazelle_haskell_modules"],
)

# rule generated from bazel-haskell-project.cabal by gazelle_cabal
haskell_library(
    name = "bazel-haskell-project",
    ghcopts = ["-DVERSION_bazel_haskell_project=\"0.1.0.0\""],
    modules = [
        ":bazel-haskell-project.Bar",
        ":bazel-haskell-project.Foo",
    ],
    version = "0.1.0.0",
    visibility = ["//visibility:public"],
    deps = ["@stackage//:base"],
)

# rule generated from bazel-haskell-project.cabal by gazelle_cabal
haskell_binary(
    name = "app",
    ghcopts = ["-DVERSION_bazel_haskell_project=\"0.1.0.0\""],
    main_file = "app/Main.hs",
    modules = [":app.Main"],
    narrowed_deps = [":bazel-haskell-project"],
    version = "0.1.0.0",
    visibility = ["//visibility:public"],
    deps = [
        "@stackage//:base",
        "@stackage//:formatting",
        "@stackage//:text",
    ],
)

# rule generated from bazel-haskell-project.cabal by gazelle_cabal
haskell_test(
    name = "test",
    ghcopts = ["-DVERSION_bazel_haskell_project=\"0.1.0.0\""],
    main_file = "test/Main.hs",
    modules = [":test.Main"],
    narrowed_deps = [":bazel-haskell-project"],
    version = "0.1.0.0",
    visibility = ["//visibility:public"],
    deps = ["@stackage//:base"],
)

# rule generated by gazelle_haskell_modules
haskell_module(
    name = "bazel-haskell-project.Bar",
    src = "src/Bar.hs",
    src_strip_prefix = "src",
    visibility = ["//visibility:public"],
    deps = [":bazel-haskell-project.Foo"],
)

# rule generated by gazelle_haskell_modules
haskell_module(
    name = "bazel-haskell-project.Foo",
    src = "src/Foo.hs",
    src_strip_prefix = "src",
    visibility = ["//visibility:public"],
)

# rule generated by gazelle_haskell_modules
haskell_module(
    name = "app.Main",
    src = "app/Main.hs",
    cross_library_deps = [
        ":bazel-haskell-project.Bar",
        ":bazel-haskell-project.Foo",
    ],
    src_strip_prefix = "app",
    visibility = ["//visibility:public"],
)

# rule generated by gazelle_haskell_modules
haskell_module(
    name = "test.Main",
    src = "test/Main.hs",
    cross_library_deps = [
        ":bazel-haskell-project.Bar",
        ":bazel-haskell-project.Foo",
    ],
    src_strip_prefix = "test",
    visibility = ["//visibility:public"],
)
